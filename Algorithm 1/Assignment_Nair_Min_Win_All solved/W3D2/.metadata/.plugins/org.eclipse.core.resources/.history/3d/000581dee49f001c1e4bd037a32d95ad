package sortAlgorithm;

import java.util.Arrays;

public class HeapSort {

    HeapBottomUp heap = new HeapBottomUp();
    int swapCount = 0;

    public static void main(String[] args) {
//        int[] array = new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
//        int[] array = new int[]{0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15};
//        int[] array = new int[]{0, 4, 2, 3, 1, 5, 8, 7, 6, 11, 10, 12, 9, 13, 14, 16, 15};
        int[] array = new int[]{0, 5, 6, 7, 4, 2, 3, 1, 8, 11, 13, 14, 16, 10, 12, 11, 9};

        HeapSort heapSort = new HeapSort();
        heapSort.sort(array, array.length);
        System.out.println(Arrays.toString(array));
    }

    private void sort(int[] array, int length) {
        heap.sort(array, length);
        swap(array, array.length - (swapCount + 1));
        swapCount++;
        while (swapCount < array.length - 1) {
            sort(array, length - 1);
        }
    }

    private void swap(int[] array, int swapIndex) {
        int temp = array[1];
        array[1] = array[swapIndex];
        array[swapIndex] = temp;
    }

}
